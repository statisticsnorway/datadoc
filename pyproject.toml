[tool.poetry]
name = "ssb-datadoc"
version = "0.2.4"
description = "Document dataset metadata. For use in Statistics Norway's metadata system."
authors = ["Statistics Norway <stat-dev@ssb.no>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/statisticsnorway/datadoc"

classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Dash",
    "Typing :: Typed"
]

packages = [
    { include = "datadoc" },
]

[tool.poetry.scripts]
datadoc = 'datadoc.app:main'

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
requests = ">=2.27.1"
pyarrow = ">=8.0.0"
jupyter-dash = ">=0.4.2"
dash = ">=2.4.1"
pydantic = ">=1.9.1"
dash-bootstrap-components = ">=1.1.0"
pandas = ">=1.4.2"
ssb-datadoc-model = "2.0.0"
dapla-toolbelt = { version = ">=1.3.3", optional = true }
gcsfs = { version = ">=2022.7.1", optional = true }

[tool.poetry.extras]
gcs = ["dapla-toolbelt", "gcsfs"]

[tool.poetry.group.dev.dependencies]
jupyterlab = ">=3.4.5"
ipykernel = ">=6.13.0"
mypy = ">=0.950"
black = ">=22.3.0"
pytest = ">=7.1.2"
pytest-cov = ">=3.0.0"
nbstripout = ">=0.5.0"
bump2version = "*"
flake8 = "*"
flake8-bugbear = "*"
flake8-builtins = "*"
flake8-comprehensions = "*"
flake8-debugger = "*"
flake8-eradicate = "*"
flake8-logging-format = "*"
isort = "*"
python-kacl = "*"
pyupgrade = "*"
tryceratops = "*"
pep8-naming = "*"
pre-commit = "*"
autoflake = "*"
pytest-mock = "*"
ipython = "*"
poethepoet = "*"
pyproject-flake8 = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
test = "pytest -vvvv --cache-clear --cov-report=term-missing --cov=."
bump-patch-version = "bump2version patch"
bump-minor-version = "bump2version minor"
bump-major-version = "bump2version major"
jupyter = "jupyter lab"
datadoc = "python datadoc/app.py"

[tool.isort]
profile = "black"
src_paths = ["datadoc"]

[tool.black]
target-version = ["py37", "py38", "py39"]
include = '\.pyi?$'

[tool.coverage.run]
omit = [
    "datadoc/tests/*",
    "datadoc/__init__.py",
    "datadoc/frontend/callbacks/register.py",
]

[tool.flake8]
ignore = [
    # Line break occurred before a binary operator (W503)
    # https://github.com/psf/black/issues/52
    "W503",
    # Line too long (E501)
    # 1. black does not format comments
    #    https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#comments
    # 2. long links in doc strings are an issue
    "E501",
    # flake8-builtins
    # the likelihood of running into an issue when shadowing a buildin
    # with a class attribute is very low
    "A003",
    # flake8-bugbear
    # fastapi recommends to use `Depend()` as an argument default.
    # Unfortuantely, exceptions are hardcoded in bugbear.
    # https://github.com/PyCQA/flake8-bugbear/issues/62
    "B008",
    # I like using f-strings for logging
    "G004",
]
# pep8-naming
classmethod-decorators = [
  "classmethod",  # built-in
  "validator",  # pydantic
  "root_validator",  # pydantic
  ]

enable-extensions = "G"  # flake8-logging-format

per-file-ignores = [
    # star imports in `__init__.py` files are ok
    "*/__init__.py:F401"
    ]

# Enables maccabe complexity checks
max-complexity = 10

exclude = [".git","__pycache__","old","build","dist",".venv",".eggs",".tox",".ipynb_checkpoints"]
