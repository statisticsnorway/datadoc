[tool.poetry]
name = "ssb-datadoc"
version = "0.4.0"
description = "Document dataset metadata. For use in Statistics Norway's metadata system."
authors = ["Statistics Norway <stat-dev@ssb.no>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/statisticsnorway/datadoc"
repository = "https://github.com/statisticsnorway/datadoc"
documentation = "https://statisticsnorway.github.io/datadoc"
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Dash",
    "Typing :: Typed",
]

packages = [{ include = "datadoc", from = "src" }]

[tool.poetry.scripts]
datadoc = 'datadoc.app:main'

[tool.poetry.urls]
Changelog = "https://github.com/statisticsnorway/datadoc/releases"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
pyarrow = ">=8.0.0"
dash = ">=2.11"
pydantic = ">2"
dash-bootstrap-components = ">=1.1.0"
pandas = ">=1.4.2"
ssb-datadoc-model = "==4.1.2"
dapla-toolbelt = ">=1.3.3"
gcsfs = ">=2022.7.1"
gunicorn = ">=21.2.0"
flask-healthz = ">=0.0.3"

[tool.poetry.group.dev.dependencies]
mypy = ">=0.950"
black = ">=22.3.0"
pytest = ">=7.1.2"
pytest-cov = ">=3.0.0"
nbstripout = ">=0.5.0"
python-kacl = "*"
pre-commit = "*"
pytest-mock = "*"
ruff = ">=0.0.284"
deptry = "^0.12.0"
pygments = ">=2.10.0"
coverage = { extras = ["toml"], version = ">=6.2" }
darglint = ">=1.8.1"
furo = ">=2021.11.12"
pre-commit-hooks = ">=4.1.0"
sphinx = ">=6.2.1"
sphinx-autobuild = ">=2021.3.14"
sphinx-autodoc-typehints = ">=1.24.0"
sphinx-click = ">=3.0.2"
typeguard = ">=2.13.3"
xdoctest = { extras = ["colors"], version = ">=0.15.10" }
myst-parser = { version = ">=0.16.1" }


[tool.pytest.ini_options]
pythonpath = ["src/datadoc"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["datadoc"]
omit = [
    "datadoc/tests/*",
    "datadoc/__init__.py",
    "datadoc/frontend/callbacks/register.py",
]

[tool.coverage.report]
show_missing = true
fail_under = 80

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true

[tool.ruff]
force-exclude = true    # Apply excludes to pre-commit
show-fixes = true
src = ["src", "tests"]
target-version = "py39" # Minimum Python version supported

# Ruff rules may be customized as desired: https://docs.astral.sh/ruff/rules/
select = ["ALL"]
ignore = [
    "A003",
    "ANN101", # Supress missing-type-self.
    "B008",
    "D100",   # Supress undocumented-public-module. Only doc of public api required.
    "E402",   # Supress module-import-not-at-top-of-file, needed in jupyter notebooks.
    "E501",   # Supress line-too-long warnings: trust black's judgement on this one.
]
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
extend-exclude = [
    "__pycache__",
    "old",
    ".ipynb_checkpoints",
    "noxfile.py",
    "docs/conf.py",
]

[tool.ruff.isort]
force-single-line = true

[tool.ruff.mccabe]
max-complexity = 15

[tool.ruff.pydocstyle]
convention = "google" # You can also use "numpy".

[tool.ruff.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "validator",
    "root_validator",
    "pydantic.validator",
]

[tool.ruff.per-file-ignores]
"*/__init__.py" = ["F401"]
"datadoc/frontend/callbacks/register_callbacks.py" = ["C901"]
"**/tests/*" = [
    # asserts are encouraged in pytest
    "S101",
    # return annotations don't add value for test functions
    "ANN201",
    # docstrings are overkill for test functions
    "D103",
    "D100",
]
# This filename is a convention for Gunicorn
"src/datadoc/gunicorn.conf.py" = ["N999"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
